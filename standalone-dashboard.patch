*** Begin Patch
*** Add File: src/main.ts
+import { bootstrapApplication } from '@angular/platform-browser';
+import { AppComponent } from './app/app.component';
+import { appConfig } from './app/app.config';
+
+bootstrapApplication(AppComponent, appConfig)
+  .catch(err => console.error(err));
+
*** End Patch
*** Begin Patch
*** Add File: src/app/app.config.ts
+import { ApplicationConfig, importProvidersFrom } from '@angular/core';
+import { BrowserModule } from '@angular/platform-browser';
+import { HttpClientModule } from '@angular/common/http';
+import { provideRouter } from '@angular/router';
+import { DashboardComponent } from './dashboard/dashboard.component';
+
+export const appConfig: ApplicationConfig = {
+  providers: [
+    importProvidersFrom(BrowserModule, HttpClientModule),
+    provideRouter([
+      { path: '', component: DashboardComponent }
+    ])
+  ]
+};
+
*** End Patch
*** Begin Patch
*** Add File: src/app/app.component.ts
+import { Component } from '@angular/core';
+import { CommonModule } from '@angular/common';
+import { RouterOutlet } from '@angular/router';
+import { SidebarComponent } from './sidebar/sidebar.component';
+
+@Component({
+  selector: 'app-root',
+  standalone: true,
+  imports: [CommonModule, SidebarComponent, RouterOutlet],
+  templateUrl: './app.component.html',
+  styleUrls: ['./app.component.scss']
+})
+export class AppComponent {
+  // shell-level logic can go here
+}
+
*** End Patch
*** Begin Patch
*** Add File: src/app/app.component.html
+<div class="app-shell">
+  <app-sidebar class="sidebar"></app-sidebar>
+  <main class="main">
+    <router-outlet></router-outlet>
+  </main>
+</div>
+
*** End Patch
*** Begin Patch
*** Add File: src/app/app.component.scss
+:host, html, body {
+  height: 100%;
+}
+.app-shell {
+  display: flex;
+  gap: 1rem;
+  height: 100vh;
+  background: #0b0b0b;
+  color: #eee;
+  padding: 1rem;
+  box-sizing: border-box;
+  font-family: Inter, Roboto, sans-serif;
+}
+.sidebar { width: 160px; }
+.main { flex: 1; display: flex; align-items: center; justify-content: center; }
+
*** End Patch
*** Begin Patch
*** Add File: src/app/sidebar/sidebar.component.ts
+import { Component } from '@angular/core';
+import { CommonModule } from '@angular/common';
+
+@Component({
+  selector: 'app-sidebar',
+  standalone: true,
+  imports: [CommonModule],
+  templateUrl: './sidebar.component.html',
+  styleUrls: ['./sidebar.component.scss']
+})
+export class SidebarComponent {
+  buttons = ['FACTURAR','BUSCAR F.','LISTAR COMPROBANTES','CAJA','TAREAS','INVENTARIO','CLIENTES','DATOS','PROVEEDORES','AJUSTES'];
+}
+
*** End Patch
*** Begin Patch
*** Add File: src/app/sidebar/sidebar.component.html
+<div class="side-wrap">
+  <div class="home-icon">üè†</div>
+  <nav class="menu">
+    <button *ngFor="let b of buttons" class="btn">{{ b }}</button>
+  </nav>
+</div>
+
*** End Patch
*** Begin Patch
*** Add File: src/app/sidebar/sidebar.component.scss
+.side-wrap {
+  background: transparent;
+  border-radius: 12px;
+  padding: 8px;
+  color: #fff;
+}
+.home-icon { font-size: 22px; margin-bottom: 8px; }
+.menu { display:flex; flex-direction: column; gap: 8px; }
+.btn { background: rgba(255,255,255,0.04); border: 1px solid rgba(255,255,255,0.12); color: #fff; padding: 8px; text-align:center; border-radius:6px; cursor:pointer; }
+
*** End Patch
*** Begin Patch
*** Add File: src/app/dashboard/dashboard.component.ts
+import { Component, ChangeDetectionStrategy } from '@angular/core';
+import { CommonModule } from '@angular/common';
+import { DashboardChartComponent } from './dashboard-chart.component';
+import { of } from 'rxjs';
+
+@Component({
+  selector: 'app-dashboard',
+  standalone: true,
+  imports: [CommonModule, DashboardChartComponent],
+  templateUrl: './dashboard.html',
+  styleUrls: ['./dashboard.component.scss'],
+  changeDetection: ChangeDetectionStrategy.OnPush
+})
+export class DashboardComponent {
+  today = new Date().toLocaleDateString();
+  chartData$ = of({
+    labels: ['0','1','2','3','4','5','6','7','8','9','10','11','12','13','14','15','16'],
+    datasets: [{ data: [0,0,0,0,0,0,0,0,1,5,10,11,0,0,9,7,6], label: 'Ventas' }]
+  });
+}
+
*** End Patch
*** Begin Patch
*** Add File: src/app/dashboard/dashboard.html
+<section class="dash-shell">
+  <header class="dash-header">
+    <div class="left">[Nombre de app]</div>
+    <div class="center">Company Name</div>
+    <div class="right">{{ today }}</div>
+  </header>
+
+  <div class="card">
+    <h3 class="title">Ventas Hoy</h3>
+    <app-dashboard-chart [data$]="chartData$"></app-dashboard-chart>
+  </div>
+</section>
+
*** End Patch
*** Begin Patch
*** Add File: src/app/dashboard/dashboard.component.scss
+.dash-shell {
+  width: 100%;
+  max-width: 1100px;
+  border-radius: 26px;
+  padding: 20px;
+  background: #0f0f10;
+  border: 1px solid rgba(255,255,255,0.06);
+  color: #ffffff;
+}
+.dash-header { display:flex; justify-content:space-between; align-items:center; margin-bottom:1rem; }
+.card { padding: 1rem; border: 1px solid rgba(255,255,255,0.06); border-radius:8px; background: transparent; }
+.title { text-align:center; margin-bottom: 12px; }
+
*** End Patch
*** Begin Patch
*** Add File: src/app/dashboard/dashboard-chart.component.ts
+import { Component, Input, OnDestroy, ChangeDetectionStrategy, ViewChild } from '@angular/core';
+import { CommonModule } from '@angular/common';
+import { BaseChartDirective, NgChartsModule } from 'ng2-charts';
+import { Subject } from 'rxjs';
+import { takeUntil } from 'rxjs/operators';
+import type { ChartData, ChartOptions, ChartType } from 'chart.js';
+
+@Component({
+  standalone: true,
+  imports: [CommonModule, NgChartsModule],
+  selector: 'app-dashboard-chart',
+  template: `
+    <div class="chart-wrap">
+      <canvas baseChart
+              #chart
+              [data]="chartData"
+              [options]="chartOptions"
+              [type]="chartType"
+              aria-label="Ventas hoy"
+              role="img"></canvas>
+    </div>
+  `,
+  styles: [`
+    .chart-wrap { width:100%; height:320px; }
+    canvas { display:block; width:100% !important; height:100% !important; }
+  `],
+  changeDetection: ChangeDetectionStrategy.OnPush
+})
+export class DashboardChartComponent implements OnDestroy {
+  @ViewChild(BaseChartDirective) chart?: BaseChartDirective;
+
+  private destroy$ = new Subject<void>();
+
+  @Input() set data$(obs: any) {
+    obs?.pipe?.(takeUntil(this.destroy$)).subscribe((payload: ChartData<'bar'>) => {
+      this.chartData = { ...payload } as ChartData<'bar'>;
+      setTimeout(() => this.chart?.update(), 0);
+    });
+  }
+
+  chartData: ChartData<'bar'> = { labels: [], datasets: [] };
+  chartType: ChartType = 'bar';
+  chartOptions: ChartOptions = {
+    responsive: true,
+    maintainAspectRatio: false,
+    plugins: { legend: { display: false } },
+    scales: {
+      x: { grid: { display: false } },
+      y: { grid: { display: false }, beginAtZero: true }
+    }
+  };
+
+  ngOnDestroy(): void {
+    this.destroy$.next();
+    this.destroy$.complete();
+    try { this.chart?.chart?.destroy(); } catch (e) { }
+  }
+}
+
*** End Patch
*** Begin Patch
*** Add File: src/app/shared/components/sidevar/sidevar.css
+/* created to satisfy existing import in sidevar.ts */
+.sidevar { display:block; }
+
*** End Patch
